name: 构建多平台版本

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build-linux:
    name: 构建 Linux 版本
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 设置 Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust 缓存
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: 安装 npm 依赖
        run: npm ci

      - name: 构建前端
        run: npm run build

      - name: 构建 Tauri 应用
        run: npm run tauri:build

      - name: 上传 Linux 可执行文件
        uses: actions/upload-artifact@v4
        with:
          name: bilibili-backup-tauri-linux-x86_64
          path: src-tauri/target/release/bilibili-backup-tauri
          if-no-files-found: error

      - name: 上传 AppImage（如果存在）
        uses: actions/upload-artifact@v4
        with:
          name: bilibili-backup-tauri-linux-appimage
          path: src-tauri/target/release/bundle/appimage/*.AppImage
          if-no-files-found: ignore

      - name: 上传 DEB 包（如果存在）
        uses: actions/upload-artifact@v4
        with:
          name: bilibili-backup-tauri-linux-deb
          path: src-tauri/target/release/bundle/deb/*.deb
          if-no-files-found: ignore

  build-windows:
    name: 构建 Windows 版本
    runs-on: windows-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 设置 Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Rust 缓存
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: 安装 npm 依赖
        run: npm ci

      - name: 构建前端
        run: npm run build

      - name: 构建 Tauri 应用
        run: npm run tauri:build

      - name: 上传 Windows 可执行文件
        uses: actions/upload-artifact@v4
        with:
          name: bilibili-backup-tauri-windows-x86_64
          path: src-tauri/target/release/bilibili-backup-tauri.exe
          if-no-files-found: error

      - name: 上传 MSI 安装包
        uses: actions/upload-artifact@v4
        with:
          name: bilibili-backup-tauri-windows-msi
          path: src-tauri/target/release/bundle/msi/*.msi
          if-no-files-found: ignore

      - name: 上传 NSIS 安装程序
        uses: actions/upload-artifact@v4
        with:
          name: bilibili-backup-tauri-windows-nsis
          path: src-tauri/target/release/bundle/nsis/*.exe
          if-no-files-found: ignore

  build-macos:
    name: 构建 macOS 版本
    runs-on: macos-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 设置 Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin,aarch64-apple-darwin

      - name: Rust 缓存
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: 安装 npm 依赖
        run: npm ci

      - name: 构建前端
        run: npm run build

      - name: 构建 Tauri 应用（x86_64）
        run: npm run tauri:build -- --target x86_64-apple-darwin

      - name: 构建 Tauri 应用（Apple Silicon）
        run: npm run tauri:build -- --target aarch64-apple-darwin

      - name: 上传 macOS 应用（x86_64）
        uses: actions/upload-artifact@v4
        with:
          name: bilibili-backup-tauri-macos-x86_64
          path: src-tauri/target/x86_64-apple-darwin/release/bundle/macos/*.app
          if-no-files-found: ignore

      - name: 上传 macOS 应用（Apple Silicon）
        uses: actions/upload-artifact@v4
        with:
          name: bilibili-backup-tauri-macos-aarch64
          path: src-tauri/target/aarch64-apple-darwin/release/bundle/macos/*.app
          if-no-files-found: ignore

      - name: 上传 DMG 安装包（x86_64）
        uses: actions/upload-artifact@v4
        with:
          name: bilibili-backup-tauri-macos-x86_64-dmg
          path: src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg
          if-no-files-found: ignore

      - name: 上传 DMG 安装包（Apple Silicon）
        uses: actions/upload-artifact@v4
        with:
          name: bilibili-backup-tauri-macos-aarch64-dmg
          path: src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg
          if-no-files-found: ignore

  create-release:
    name: 创建 Release
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 显示构建产物
        run: ls -R artifacts/

      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/bilibili-backup-tauri-linux-x86_64/*
            artifacts/bilibili-backup-tauri-linux-appimage/*
            artifacts/bilibili-backup-tauri-linux-deb/*
            artifacts/bilibili-backup-tauri-windows-x86_64/*
            artifacts/bilibili-backup-tauri-windows-msi/*
            artifacts/bilibili-backup-tauri-windows-nsis/*
            artifacts/bilibili-backup-tauri-macos-x86_64/*
            artifacts/bilibili-backup-tauri-macos-aarch64/*
            artifacts/bilibili-backup-tauri-macos-x86_64-dmg/*
            artifacts/bilibili-backup-tauri-macos-aarch64-dmg/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
